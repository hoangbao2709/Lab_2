#include "Component.h"

void GetROW(uint8_t *binary_array){
	HAL_GPIO_WritePin(ROW0_GPIO_Port, ROW0_Pin, binary_array[0]);
	HAL_GPIO_WritePin(ROW1_GPIO_Port, ROW1_Pin, binary_array[1]);
	HAL_GPIO_WritePin(ROW2_GPIO_Port, ROW2_Pin, binary_array[2]);
	HAL_GPIO_WritePin(ROW3_GPIO_Port, ROW3_Pin, binary_array[3]);
	HAL_GPIO_WritePin(ROW4_GPIO_Port, ROW4_Pin, binary_array[4]);
	HAL_GPIO_WritePin(ROW5_GPIO_Port, ROW5_Pin, binary_array[5]);
	HAL_GPIO_WritePin(ROW6_GPIO_Port, ROW6_Pin, binary_array[6]);
	HAL_GPIO_WritePin(ROW7_GPIO_Port, ROW7_Pin, binary_array[7]);
}

void GetCOL(uint8_t *binary_array_1){
	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, binary_array_1[0]);
	HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, binary_array_1[1]);
	HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, binary_array_1[2]);
	HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, binary_array_1[3]);
	HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, binary_array_1[4]);
	HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, binary_array_1[5]);
	HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, binary_array_1[6]);
	HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, binary_array_1[7]);
}

uint8_t* convert_to_binary_array(uint8_t value) {
  uint8_t *binary_array = (uint8_t*)malloc(sizeof(uint8_t) * 8);
  for (int i = 0; i < 8; i++) {
    binary_array[i] = (value >> i) & 1;
  }
  return binary_array;
}

const int MAX_LED_MATRIX = 8;
int index_led_matrix = 0;
uint8_t ChuA[8] = {0xE7, 0xC3 , 0x99 , 0x99 , 0x81 , 0x81 , 0x99 , 0x99 };
uint8_t ChuB[8] = {0xC3, 0xBB , 0xBB , 0xC3 , 0xBB , 0xBB , 0xBB , 0xC3 };
uint8_t ChuC[8] = {0x83, 0x81 , 0xF9 , 0xF9 , 0xF9 , 0xF9 , 0x81 , 0x83 };
uint8_t ChuD[8] = {0xC1, 0x81 , 0x99 , 0x99 , 0x99 , 0x99 , 0x81 , 0xC1 };
uint8_t ChuE[8] = {0x81, 0x81 , 0xF9 , 0x81 , 0x81 , 0xF9 , 0x81 , 0x81 };
uint8_t ChuF[8] = {0x81, 0x81 , 0xF9 , 0x81 , 0x81 , 0xF9 , 0xF9 , 0xF9 };
uint8_t ChuG[8] = {0x83, 0x81 , 0xF9 , 0x09 , 0x09 , 0x99 , 0x81 , 0xC3 };
uint8_t ChuH[8] = {0x99, 0x99 , 0x99 , 0x81 , 0x81 , 0x99 , 0x99 , 0x99 };
uint8_t ChuI[8] = {0xC3, 0xC3 , 0xE7 , 0xE7 , 0xE7 , 0xE7 , 0xC3 , 0xC3 };
uint8_t ChuJ[8] = {0xC3, 0xC3 , 0xCF , 0xCF , 0xCF , 0xCB , 0xC3 , 0xC7 };
uint8_t ChuK[8] = {0x99, 0xC9 , 0xE1 , 0xF1 , 0xF1 , 0xE1 , 0xC9 , 0x99 };
uint8_t ChuL[8] = {0xF3, 0xF3 , 0xF3 , 0xF3 , 0xF3 , 0xF3 , 0xC3 , 0xC3 };

uint8_t ChuM[8] = {0x3C, 0x18, 0x00, 0x24, 0x3C, 0x3C, 0x3C, 0x3C};
uint8_t ChuN[8] = {0x3C, 0x38, 0x30, 0x24, 0x24, 0x0C, 0x1C, 0x3C};
uint8_t ChuO[8] = {0xC3, 0x81, 0x99, 0x99, 0x99, 0x99, 0x81, 0xC3};
uint8_t ChuP[8] = {0xE1, 0xD9, 0xD9, 0xD9, 0xE1, 0xF9, 0xF9, 0xF9};
uint8_t ChuQ[8] = {0xE3, 0xDD, 0xDD, 0xDD, 0xDD, 0xD5, 0xCD, 0x83};
uint8_t ChuR[8] = {0xE1, 0xD9, 0xD9, 0xD9, 0xE1, 0xF1, 0xE9, 0xD9};
uint8_t ChuS[8] = {0xC3, 0xDB, 0xFB, 0xC3, 0xDF, 0xDF, 0xDB, 0xC3};
uint8_t ChuT[8] = {0x81, 0x81, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7};
uint8_t ChuU[8] = {0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xC3};
uint8_t ChuV[8] = {0x3C, 0x3C, 0xBD, 0x99, 0xDB, 0xC3, 0xE7, 0xE7};
uint8_t ChuW[8] = {0x7E, 0x7E, 0x7E, 0xA5, 0xA5, 0xA5, 0xDB, 0xDB};
uint8_t ChuX[8] = {0x7E, 0x3C, 0x99, 0xC3, 0xC3, 0x99, 0x3C, 0x7E};
uint8_t ChuY[8] = {0xBD, 0x99, 0xDB, 0xC3, 0xE7, 0xE7, 0xE7, 0xE7};
uint8_t ChuZ[8] = {0x81, 0x81, 0x9F, 0xC7, 0xE3, 0xF9, 0x81, 0x81};

int x = 0;

uint8_t Chu[26][8] = {
    {0xE7, 0xC3, 0x99, 0x99, 0x81, 0x81, 0x99, 0x99},
    {0xC3, 0xBB, 0xBB, 0xC3, 0xBB, 0xBB, 0xBB, 0xC3},
    {0x83, 0x81, 0xF9, 0xF9, 0xF9, 0xF9, 0x81, 0x83},
    {0xC1, 0x81, 0x99, 0x99, 0x99, 0x99, 0x81, 0xC1},
    {0x81, 0x81, 0xF9, 0x81, 0x81, 0xF9, 0x81, 0x81},
    {0x81, 0x81, 0xF9, 0x81, 0x81, 0xF9, 0xF9, 0xF9},
    {0x83, 0x81, 0xF9, 0x09, 0x09, 0x99, 0x81, 0xC3},
    {0x99, 0x99, 0x99, 0x81, 0x81, 0x99, 0x99, 0x99},
    {0xC3, 0xC3, 0xE7, 0xE7, 0xE7, 0xE7, 0xC3, 0xC3},
    {0xC3, 0xC3, 0xCF, 0xCF, 0xCF, 0xCB, 0xC3, 0xC7},
    {0x99, 0xC9, 0xE1, 0xF1, 0xF1, 0xE1, 0xC9, 0x99},
    {0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xC3, 0xC3},
    {0x3C, 0x18, 0x00, 0x24, 0x3C, 0x3C, 0x3C, 0x3C},
    {0x3C, 0x38, 0x30, 0x24, 0x24, 0x0C, 0x1C, 0x3C},
    {0xC3, 0x81, 0x99, 0x99, 0x99, 0x99, 0x81, 0xC3},
    {0xE1, 0xD9, 0xD9, 0xD9, 0xE1, 0xF9, 0xF9, 0xF9},
    {0xE3, 0xDD, 0xDD, 0xDD, 0xDD, 0xD5, 0xCD, 0x83},
    {0xE1, 0xD9, 0xD9, 0xD9, 0xE1, 0xF1, 0xE9, 0xD9},
    {0xC3, 0xDB, 0xFB, 0xC3, 0xDF, 0xDF, 0xDB, 0xC3},
    {0x81, 0x81, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7},
    {0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xC3},
    {0x3C, 0x3C, 0xBD, 0x99, 0xDB, 0xC3, 0xE7, 0xE7},
    {0x7E, 0x7E, 0x7E, 0xA5, 0xA5, 0xA5, 0xDB, 0xDB},
    {0x7E, 0x3C, 0x99, 0xC3, 0xC3, 0x99, 0x3C, 0x7E},
    {0xBD, 0x99, 0xDB, 0xC3, 0xE7, 0xE7, 0xE7, 0xE7},
    {0x81, 0x81, 0x9F, 0xC7, 0xE3, 0xF9, 0x81, 0x81}
};


void updateLEDMatrix (int index ){
	uint8_t *binary_array_1 = convert_to_binary_array(ChuB[index]);
	GetCOL(binary_array_1);
	free(binary_array_1);
}
